plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    signingConfigs {
        debug {
            storeFile file('dummyKeystore')
            storePassword 'dummypwd'
            keyAlias 'dummyKey'
            keyPassword 'dummypwd'
        }
        release {
            storeFile file('dummyKeystore')
            storePassword 'dummypwd'
            keyAlias 'dummyKey'
            keyPassword 'dummypwd'
        }
    }
    compileSdk 31

    defaultConfig {
        applicationId "com.glassimaging.climage"
        minSdk 27
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags '-std=c++2a -frtti -fexceptions'
            }
        }
        signingConfig signingConfigs.release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        // Use compiled shaders for the release build
        release {
            assets.srcDirs = [
                    "$projectDir.absolutePath/src/main/assets",
                    "$project.rootDir/app/build/OpenCLBinaries"
            ]
        }
        // Use OpenCL source shaders for the debug build
        debug {
            assets.srcDirs = [
                    "$projectDir.absolutePath/src/main/assets",
                    "$projectDir.absolutePath/src/main/cpp/OpenCL"
            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.18.1'
        }
    }
    flavorDimensions 'cpuArch'
    productFlavors {
        arm8 {
            dimension 'cpuArch'
            ndk {
                abiFilters 'arm64-v8a'
            }
        }
    }
    buildFeatures {
        viewBinding true
    }
}

tasks.register('compileShaders') {
    if (tasks.findByName("mergeArm8ReleaseAssets")) {
        dependsOn("externalNativeBuildArm8Release")
    }
    inputs.files('app/src/main/OpenCL/*.cl')
            .withPropertyName('sourceFiles')
            .withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.dir(layout.buildDirectory.dir('OpenCLBinaries'))  // app/build/OpenCLBinaries
            .withPropertyName('outputDir')
    outputs.upToDateWhen { false }

    doLast {
        // Run the shell script compile_shaders.sh to generate the compiled shaders
        def sdkDir = android.getSdkDirectory().getAbsolutePath()
        def proc = "app/util/compile_shaders.sh $sdkDir app/src/main/cpp/OpenCL app/build/OpenCLBinaries".execute()
        proc.waitForProcessOutput(System.out, System.err)
    }
}

project.afterEvaluate {
    // Only generate compiled shaders for the Release build
    if (tasks.findByName("mergeArm8ReleaseAssets")) {
        mergeArm8ReleaseAssets.dependsOn compileShaders
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    // testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}